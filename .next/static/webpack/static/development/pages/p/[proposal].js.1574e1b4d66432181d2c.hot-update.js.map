{"version":3,"file":"static/webpack/static/development/pages/p/[proposal].js.1574e1b4d66432181d2c.hot-update.js","sources":["webpack:///./components/ProposalPage.js"],"sourcesContent":["import React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport MeactMarkdown from 'react-markdown';\nimport { useRouter } from 'next/router';\nimport { withAuth, withLoginRequired } from 'use-auth0-hooks';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { ContentContainer, ProposalHeader } from 'components';\nimport ReactMarkdown from 'react-markdown';\nimport MainLayout from '../layouts/MainLayout';\nimport { PROPOSAL_BY_SLUG_QUERY } from '../queries';\n\nconst Sections = styled.div`\n  display: flex;\n  padding: 20px 0;\n`;\n\nconst SectionLink = styled.a`\n  padding-right: 16px;\n`;\n\nfunction ProposalPage({\n  auth, query, sections, currentSection,\n}) {\n  const { loading, error, data } = useQuery(PROPOSAL_BY_SLUG_QUERY, {\n    variables: { slug: query.proposal, branchName: query.branch },\n  });\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return (\n      <p>\n        Error:\n        {' '}\n        {JSON.stringify(error)}\n      </p>\n    );\n  }\n\n  const router = useRouter();\n\n  const handleBranchSelect = (selectedBranch) => {\n    if (selectedBranch !== query.branch) {\n      if (selectedBranch !== 'master') {\n        router.push(`/p/${query.proposal}/branch/${selectedBranch}`);\n      } else {\n        router.push(`/p/${query.proposal}`);\n      }\n    }\n  };\n\n  return (\n    <MainLayout>\n      <ContentContainer>\n        <ProposalHeader\n          title={data.proposalBySlug.title}\n          description={data.proposalBySlug.description}\n          branches={data.proposalBySlug.branches}\n          onBranchSelect={handleBranchSelect}\n          currentBranch={query.branch || 'master'}\n        />\n        <Sections>\n          {sections.map((section) => (\n            <Link href={section.href} key={section.label} as={section.href}>\n              <SectionLink>{section.label}</SectionLink>\n            </Link>\n          ))}\n        </Sections>\n        <ReactMarkdown source={data.proposalBySlug.summary} />\n        <ReactMarkdown source={data.proposalBySlug.legal} />\n      </ContentContainer>\n    </MainLayout>\n  );\n}\n\nProposalPage.getInitialProps = ({ query }) => ({ query });\n\nexport default ProposalPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AADA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;A","sourceRoot":""}