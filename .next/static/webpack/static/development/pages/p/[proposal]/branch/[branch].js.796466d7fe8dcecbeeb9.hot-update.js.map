{"version":3,"file":"static/webpack/static/development/pages/p/[proposal]/branch/[branch].js.796466d7fe8dcecbeeb9.hot-update.js","sources":["webpack:///./components/RIchTextEditor.js","webpack:///./components/RichTextEditor.js"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport { createEditor, Node } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\nimport { withHistory } from \"slate-history\";\nimport styled from \"styled-components\";\n\nconst StyledEditable = styled(Editable)`\n  border: 1px solid #ccc;\n  margin-top: 30px;\n  padding: 12px 8px;\n  &:placeholder {\n    color: #757575;\n    opacity: 1 !important;\n  }\n`;\n\nconst RichTextEditor = ({ placeholder, onChange, initialValue }) => {\n  const [value, setValue] = useState([\n    {\n      children: [\n        {\n          text: initialValue\n        }\n      ]\n    }\n  ]);\n\n  const serialize = nodes => nodes.map(n => Node.string(n)).join(\"\\n\");\n\n  const handleChange = value => {\n    if (onChange) {\n      onChange(serialize(value));\n    }\n    setValue(value);\n  };\n\n  const editor = useMemo(() => withHistory(withReact(createEditor())), []);\n\n  return (\n    <Slate\n      editor={editor}\n      value={value}\n      onChange={value => handleChange(value)}\n    >\n      <StyledEditable placeholder={placeholder} />\n    </Slate>\n  );\n};\n\nexport default RichTextEditor;\n","import React, { useState, useMemo } from \"react\";\nimport { createEditor, Node } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\nimport { withHistory } from \"slate-history\";\nimport styled from \"styled-components\";\n\nconst StyledEditable = styled(Editable)`\n  border: 1px solid #ccc;\n  margin-top: 30px;\n  padding: 12px 8px;\n  &:placeholder {\n    color: #757575;\n    opacity: 1 !important;\n  }\n`;\n\nconst RichTextEditor = ({ placeholder, onChange, initialValue }) => {\n  const [value, setValue] = useState([\n    {\n      children: [\n        {\n          text: initialValue\n        }\n      ]\n    }\n  ]);\n\n  const serialize = nodes => nodes.map(n => Node.string(n)).join(\"\\n\");\n\n  const handleChange = value => {\n    if (onChange) {\n      onChange(serialize(value));\n    }\n    setValue(value);\n  };\n\n  const editor = useMemo(() => withHistory(withReact(createEditor())), []);\n\n  return (\n    <Slate\n      editor={editor}\n      value={value}\n      onChange={value => handleChange(value)}\n    >\n      <StyledEditable placeholder={placeholder} />\n    </Slate>\n  );\n};\n\nexport default RichTextEditor;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AASA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAEA;AADA;AAFA;AAFA;AAAA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AASA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAEA;AADA;AAFA;AAFA;AAAA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}