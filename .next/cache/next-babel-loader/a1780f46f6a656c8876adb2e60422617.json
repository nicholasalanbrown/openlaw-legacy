{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/nicholasbrown/Source/openlaw/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    proposals {\\n      id\\n      title\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\nimport styled from \"styled-components\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { ContentContainer } from \"../components\";\nimport { getProposals } from \"../queries\";\nvar PROPOSALS = gql(_templateObject());\n\nfunction Index(_ref) {\n  var proposals = _ref.proposals;\n\n  var _useQuery = useQuery(PROPOSALS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Error :(\");\n  return __jsx(MainLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(ContentContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, data && data.proposals && data.proposals.map(function (proposal) {\n    return __jsx(\"div\", {\n      key: proposal.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(Link, {\n      key: proposal.id,\n      href: \"/?\".concat(proposal.slug),\n      as: \"/\".concat(proposal.slug),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, proposal.title)));\n  })));\n}\n\nIndex.getInitialProps = function _callee() {\n  var proposals;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(getProposals());\n\n        case 2:\n          proposals = _context.sent;\n          return _context.abrupt(\"return\", {\n            proposals: proposals\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/nicholasbrown/Source/openlaw/pages/index.js"],"names":["MainLayout","Link","fetch","styled","useQuery","gql","ContentContainer","getProposals","PROPOSALS","Index","proposals","loading","error","data","map","proposal","id","slug","title","getInitialProps"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,uBAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;SAESC,gB;AACT,SAASC,YAAT,QAA6B,YAA7B;AAEA,IAAMC,SAAS,GAAGH,GAAH,mBAAf;;AASA,SAASI,KAAT,OAA8B;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,kBACKN,QAAQ,CAACI,SAAD,CADb;AAAA,MACpBG,OADoB,aACpBA,OADoB;AAAA,MACXC,KADW,aACXA,KADW;AAAA,MACJC,IADI,aACJA,IADI;;AAG5B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,IACHA,IAAI,CAACH,SADN,IAECG,IAAI,CAACH,SAAL,CAAeI,GAAf,CAAmB,UAAAC,QAAQ;AAAA,WACzB;AAAK,MAAA,GAAG,EAAEA,QAAQ,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AACE,MAAA,GAAG,EAAED,QAAQ,CAACC,EADhB;AAEE,MAAA,IAAI,cAAOD,QAAQ,CAACE,IAAhB,CAFN;AAGE,MAAA,EAAE,aAAMF,QAAQ,CAACE,IAAf,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,QAAQ,CAACG,KAAb,CALF,CADF,CADyB;AAAA,GAA3B,CAHJ,CADF,CADF;AAmBD;;AAEDT,KAAK,CAACU,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACEZ,YAAY,EADd;;AAAA;AAChBG,UAAAA,SADgB;AAAA,2CAEf;AAAEA,YAAAA,SAAS,EAATA;AAAF,WAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAKA,eAAeD,KAAf","sourcesContent":["import MainLayout from \"../layouts/MainLayout\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\nimport styled from \"styled-components\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nimport { ContentContainer } from \"components\";\nimport { getProposals } from \"../queries\";\n\nconst PROPOSALS = gql`\n  {\n    proposals {\n      id\n      title\n    }\n  }\n`;\n\nfunction Index({ proposals }) {\n  const { loading, error, data } = useQuery(PROPOSALS);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <div>Error :(</div>;\n\n  return (\n    <MainLayout>\n      <ContentContainer>\n        {data &&\n          data.proposals &&\n          data.proposals.map(proposal => (\n            <div key={proposal.id}>\n              <Link\n                key={proposal.id}\n                href={`/?${proposal.slug}`}\n                as={`/${proposal.slug}`}\n              >\n                <a>{proposal.title}</a>\n              </Link>\n            </div>\n          ))}\n      </ContentContainer>\n    </MainLayout>\n  );\n}\n\nIndex.getInitialProps = async function() {\n  const proposals = await getProposals();\n  return { proposals };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}