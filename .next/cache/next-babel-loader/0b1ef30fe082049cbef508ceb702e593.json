{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/nicholasbrown/Source/openlaw/components/ProposalPage.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport MeactMarkdown from 'react-markdown';\nimport { useRouter } from 'next/router';\nimport { withAuth, withLoginRequired } from 'use-auth0-hooks';\nimport { useQuery } from '@apollo/react-hooks';\nimport { ContentContainer, ProposalHeader } from \"./\";\nimport ReactMarkdown from 'react-markdown';\nimport MainLayout from '../layouts/MainLayout';\nimport { PROPOSAL_BY_SLUG_QUERY } from '../queries';\nvar Sections = styled.div.withConfig({\n  displayName: \"ProposalPage__Sections\",\n  componentId: \"sc-1xdfroq-0\"\n})([\"display:flex;padding:20px 0;\"]);\nvar StyledLink = styled(Link).withConfig({\n  displayName: \"ProposalPage__StyledLink\",\n  componentId: \"sc-1xdfroq-1\"\n})([\"padding-right:16px;\"]);\n\nfunction ProposalPage(_ref) {\n  var auth = _ref.auth,\n      query = _ref.query,\n      sections = _ref.sections,\n      currentSection = _ref.currentSection;\n\n  var _useQuery = useQuery(PROPOSAL_BY_SLUG_QUERY, {\n    variables: {\n      slug: query.proposal,\n      branchName: query.branch\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Error:\", ' ', _JSON$stringify(error));\n  }\n\n  var router = useRouter();\n\n  var handleBranchSelect = function handleBranchSelect(selectedBranch) {\n    if (selectedBranch !== query.branch) {\n      if (selectedBranch !== 'master') {\n        router.push(\"/p/\".concat(query.proposal, \"/branch/\").concat(selectedBranch));\n      } else {\n        router.push(\"/p/\".concat(query.proposal));\n      }\n    }\n  };\n\n  return __jsx(MainLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(ContentContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(ProposalHeader, {\n    title: data.proposalBySlug.title,\n    description: data.proposalBySlug.description,\n    branches: data.proposalBySlug.branches,\n    onBranchSelect: handleBranchSelect,\n    currentBranch: query.branch || 'master',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), __jsx(Sections, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, sections.map(function (section) {\n    return __jsx(StyledLink, {\n      href: section.href,\n      key: section.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, section.label));\n  })), __jsx(ReactMarkdown, {\n    source: data.proposalBySlug.summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), __jsx(ReactMarkdown, {\n    source: data.proposalBySlug.legal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })));\n}\n\nProposalPage.getInitialProps = function (_ref2) {\n  var query = _ref2.query;\n  return {\n    query: query\n  };\n};\n\nexport default ProposalPage;","map":{"version":3,"sources":["/Users/nicholasbrown/Source/openlaw/components/ProposalPage.js"],"names":["React","fetch","Link","styled","MeactMarkdown","useRouter","withAuth","withLoginRequired","useQuery","ContentContainer","ProposalHeader","ReactMarkdown","MainLayout","PROPOSAL_BY_SLUG_QUERY","Sections","div","StyledLink","ProposalPage","auth","query","sections","currentSection","variables","slug","proposal","branchName","branch","loading","error","data","router","handleBranchSelect","selectedBranch","push","proposalBySlug","title","description","branches","map","section","href","label","summary","legal","getInitialProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport MeactMarkdown from 'react-markdown';\nimport { useRouter } from 'next/router';\nimport { withAuth, withLoginRequired } from 'use-auth0-hooks';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { ContentContainer, ProposalHeader } from 'components';\nimport ReactMarkdown from 'react-markdown';\nimport MainLayout from '../layouts/MainLayout';\nimport { PROPOSAL_BY_SLUG_QUERY } from '../queries';\n\nconst Sections = styled.div`\n  display: flex;\n  padding: 20px 0;\n`;\n\nconst StyledLink = styled(Link)`\n  padding-right: 16px;\n`;\n\nfunction ProposalPage({\n  auth, query, sections, currentSection,\n}) {\n  const { loading, error, data } = useQuery(PROPOSAL_BY_SLUG_QUERY, {\n    variables: { slug: query.proposal, branchName: query.branch },\n  });\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return (\n      <p>\n        Error:\n        {' '}\n        {JSON.stringify(error)}\n      </p>\n    );\n  }\n\n  const router = useRouter();\n\n  const handleBranchSelect = (selectedBranch) => {\n    if (selectedBranch !== query.branch) {\n      if (selectedBranch !== 'master') {\n        router.push(`/p/${query.proposal}/branch/${selectedBranch}`);\n      } else {\n        router.push(`/p/${query.proposal}`);\n      }\n    }\n  };\n\n  return (\n    <MainLayout>\n      <ContentContainer>\n        <ProposalHeader\n          title={data.proposalBySlug.title}\n          description={data.proposalBySlug.description}\n          branches={data.proposalBySlug.branches}\n          onBranchSelect={handleBranchSelect}\n          currentBranch={query.branch || 'master'}\n        />\n        <Sections>\n          {sections.map((section) => (\n            <StyledLink href={section.href} key={section.label}>\n              <a>{section.label}</a>\n            </StyledLink>\n          ))}\n        </Sections>\n        <ReactMarkdown source={data.proposalBySlug.summary} />\n        <ReactMarkdown source={data.proposalBySlug.legal} />\n      </ContentContainer>\n    </MainLayout>\n  );\n}\n\nProposalPage.getInitialProps = ({ query }) => ({ query });\n\nexport default ProposalPage;\n"]},"metadata":{},"sourceType":"module"}