{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/nicholasbrown/Source/openlaw/components/ProposalPage.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport { ContentContainer, ProposalHeader } from \"./\";\nimport ReactMarkdown from 'react-markdown';\nimport MainLayout from '../layouts/MainLayout';\nimport { PROPOSAL_BY_SLUG_QUERY } from '../queries';\n\nfunction ProposalPage(_ref) {\n  var query = _ref.query,\n      sections = _ref.sections;\n\n  var _useQuery = useQuery(PROPOSAL_BY_SLUG_QUERY, {\n    variables: {\n      slug: query.proposal,\n      branchName: query.branch\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Error:\", ' ', _JSON$stringify(error));\n  }\n\n  var router = useRouter();\n\n  var handleBranchSelect = function handleBranchSelect(selectedBranch) {\n    if (selectedBranch !== query.branch) {\n      if (selectedBranch !== 'master') {\n        router.push(\"/p/\".concat(query.proposal, \"/branch/\").concat(selectedBranch));\n      } else {\n        router.push(\"/p/\".concat(query.proposal));\n      }\n    }\n  };\n\n  return __jsx(MainLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(ContentContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(ProposalHeader, {\n    title: data.proposalBySlug.title,\n    description: data.proposalBySlug.description,\n    branches: data.proposalBySlug.branches,\n    onBranchSelect: handleBranchSelect,\n    currentBranch: query.branch || 'master',\n    sections: sections,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), __jsx(ReactMarkdown, {\n    source: data.proposalBySlug.summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), __jsx(ReactMarkdown, {\n    source: data.proposalBySlug.legal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n}\n\nProposalPage.getInitialProps = function (_ref2) {\n  var query = _ref2.query;\n  return {\n    query: query\n  };\n};\n\nexport default ProposalPage;","map":{"version":3,"sources":["/Users/nicholasbrown/Source/openlaw/components/ProposalPage.js"],"names":["React","useRouter","useQuery","ContentContainer","ProposalHeader","ReactMarkdown","MainLayout","PROPOSAL_BY_SLUG_QUERY","ProposalPage","query","sections","variables","slug","proposal","branchName","branch","loading","error","data","router","handleBranchSelect","selectedBranch","push","proposalBySlug","title","description","branches","summary","legal","getInitialProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;SAESC,gB,EAAkBC,c;AAC3B,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,sBAAT,QAAuC,YAAvC;;AAEA,SAASC,YAAT,OAA2C;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBACRR,QAAQ,CAACK,sBAAD,EAAyB;AAChEI,IAAAA,SAAS,EAAE;AAAEC,MAAAA,IAAI,EAAEH,KAAK,CAACI,QAAd;AAAwBC,MAAAA,UAAU,EAAEL,KAAK,CAACM;AAA1C;AADqD,GAAzB,CADA;AAAA,MACjCC,OADiC,aACjCA,OADiC;AAAA,MACxBC,KADwB,aACxBA,KADwB;AAAA,MACjBC,IADiB,aACjBA,IADiB;;AAKzC,MAAIF,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEG,GAFH,EAGG,gBAAeA,KAAf,CAHH,CADF;AAOD;;AAED,MAAME,MAAM,GAAGlB,SAAS,EAAxB;;AAEA,MAAMmB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,cAAD,EAAoB;AAC7C,QAAIA,cAAc,KAAKZ,KAAK,CAACM,MAA7B,EAAqC;AACnC,UAAIM,cAAc,KAAK,QAAvB,EAAiC;AAC/BF,QAAAA,MAAM,CAACG,IAAP,cAAkBb,KAAK,CAACI,QAAxB,qBAA2CQ,cAA3C;AACD,OAFD,MAEO;AACLF,QAAAA,MAAM,CAACG,IAAP,cAAkBb,KAAK,CAACI,QAAxB;AACD;AACF;AACF,GARD;;AAUA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AACE,IAAA,KAAK,EAAEK,IAAI,CAACK,cAAL,CAAoBC,KAD7B;AAEE,IAAA,WAAW,EAAEN,IAAI,CAACK,cAAL,CAAoBE,WAFnC;AAGE,IAAA,QAAQ,EAAEP,IAAI,CAACK,cAAL,CAAoBG,QAHhC;AAIE,IAAA,cAAc,EAAEN,kBAJlB;AAKE,IAAA,aAAa,EAAEX,KAAK,CAACM,MAAN,IAAgB,QALjC;AAME,IAAA,QAAQ,EAAEL,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEQ,IAAI,CAACK,cAAL,CAAoBI,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAET,IAAI,CAACK,cAAL,CAAoBK,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CADF;AAgBD;;AAEDpB,YAAY,CAACqB,eAAb,GAA+B;AAAA,MAAGpB,KAAH,SAAGA,KAAH;AAAA,SAAgB;AAAEA,IAAAA,KAAK,EAALA;AAAF,GAAhB;AAAA,CAA/B;;AAEA,eAAeD,YAAf","sourcesContent":["import React from 'react';\nimport { useRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { ContentContainer, ProposalHeader } from 'components';\nimport ReactMarkdown from 'react-markdown';\nimport MainLayout from '../layouts/MainLayout';\nimport { PROPOSAL_BY_SLUG_QUERY } from '../queries';\n\nfunction ProposalPage({ query, sections }) {\n  const { loading, error, data } = useQuery(PROPOSAL_BY_SLUG_QUERY, {\n    variables: { slug: query.proposal, branchName: query.branch },\n  });\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return (\n      <p>\nError:\n        {' '}\n        {JSON.stringify(error)}\n      </p>\n    );\n  }\n\n  const router = useRouter();\n\n  const handleBranchSelect = (selectedBranch) => {\n    if (selectedBranch !== query.branch) {\n      if (selectedBranch !== 'master') {\n        router.push(`/p/${query.proposal}/branch/${selectedBranch}`);\n      } else {\n        router.push(`/p/${query.proposal}`);\n      }\n    }\n  };\n\n  return (\n    <MainLayout>\n      <ContentContainer>\n        <ProposalHeader\n          title={data.proposalBySlug.title}\n          description={data.proposalBySlug.description}\n          branches={data.proposalBySlug.branches}\n          onBranchSelect={handleBranchSelect}\n          currentBranch={query.branch || 'master'}\n          sections={sections}\n        />\n        <ReactMarkdown source={data.proposalBySlug.summary} />\n        <ReactMarkdown source={data.proposalBySlug.legal} />\n      </ContentContainer>\n    </MainLayout>\n  );\n}\n\nProposalPage.getInitialProps = ({ query }) => ({ query });\n\nexport default ProposalPage;\n"]},"metadata":{},"sourceType":"module"}