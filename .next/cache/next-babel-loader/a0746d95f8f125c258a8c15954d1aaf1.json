{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasbrown/Source/openlaw/pages/p/[proposal]/branches/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport MainLayout from \"../../../../layouts/MainLayout\";\nimport { ContentContainer } from \"../../../../components\";\n\nfunction Branches(_ref) {\n  var query = _ref.query;\n  return __jsx(MainLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(ContentContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Branches for \", query.proposal, \" here\"));\n}\n\nBranches.getInitialProps = function (_ref2) {\n  var query = _ref2.query;\n  return {\n    query: query\n  };\n};\n\nexport default Branches;","map":{"version":3,"sources":["/Users/nicholasbrown/Source/openlaw/pages/p/[proposal]/branches/index.js"],"names":["fetch","styled","useQuery","MainLayout","ContentContainer","Branches","query","proposal","getInitialProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,UAAP,MAAuB,gCAAvB;SACSC,gB;;AAET,SAASC,QAAT,OAA6B;AAAA,MAATC,KAAS,QAATA,KAAS;AAC3B,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAagBA,KAAK,CAACC,QAbtB,UADF,CADF;AAmBD;;AAEDF,QAAQ,CAACG,eAAT,GAA2B,iBAAe;AAAA,MAAZF,KAAY,SAAZA,KAAY;AACxC,SAAO;AAAEA,IAAAA,KAAK,EAALA;AAAF,GAAP;AACD,CAFD;;AAIA,eAAeD,QAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport MainLayout from \"../../../../layouts/MainLayout\";\nimport { ContentContainer } from \"components\";\n\nfunction Branches({ query }) {\n  return (\n    <MainLayout>\n      <ContentContainer>\n        {/*\n        <select\n          onChange={e => handleBranchSelect(e)}\n          defaultValue={currentBranch || \"master\"}\n        >\n          {branches.map(branch => (\n            <option key={branch.name} value={branch.name}>\n              {branch.name}\n            </option>\n          ))}\n        </select>\n          */}\n        Branches for {query.proposal} here\n      </ContentContainer>\n    </MainLayout>\n  );\n}\n\nBranches.getInitialProps = ({ query }) => {\n  return { query };\n};\n\nexport default Branches;\n"]},"metadata":{},"sourceType":"module"}