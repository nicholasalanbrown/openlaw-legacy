{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/nicholasbrown/Source/openlaw/components/ProposalPage.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport MeactMarkdown from \"react-markdown\";\nimport { useRouter } from \"next/router\";\nimport { withAuth, withLoginRequired } from \"use-auth0-hooks\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport MainLayout from \"../layouts/MainLayout\";\nimport { ContentContainer, ProposalHeader } from \"./\";\nimport { PROPOSAL_BY_SLUG_QUERY } from \"../queries\";\nimport ReactMarkdown from \"react-markdown\";\nvar Sections = styled.div.withConfig({\n  displayName: \"ProposalPage__Sections\",\n  componentId: \"sc-1xdfroq-0\"\n})([\"display:flex;\"]);\nvar SectionLink = styled.a.withConfig({\n  displayName: \"ProposalPage__SectionLink\",\n  componentId: \"sc-1xdfroq-1\"\n})([\"padding-right:16px;\"]);\n\nfunction ProposalPage(_ref) {\n  var auth = _ref.auth,\n      query = _ref.query,\n      sections = _ref.sections,\n      currentSection = _ref.currentSection;\n\n  var _useQuery = useQuery(PROPOSAL_BY_SLUG_QUERY, {\n    variables: {\n      slug: query.proposal,\n      branchName: query.branch\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Error: \", _JSON$stringify(error));\n  }\n\n  var router = useRouter();\n\n  var handleBranchSelect = function handleBranchSelect(selectedBranch) {\n    if (selectedBranch !== query.branch) {\n      if (selectedBranch !== \"master\") {\n        router.push(\"/p/\".concat(query.proposal, \"/branch/\").concat(selectedBranch));\n      } else {\n        router.push(\"/p/\".concat(query.proposal));\n      }\n    }\n  };\n\n  return __jsx(MainLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(ContentContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(ProposalHeader, {\n    title: data.proposalBySlug.title,\n    description: data.proposalBySlug.description,\n    branches: data.proposalBySlug.branches,\n    onBranchSelect: handleBranchSelect,\n    currentBranch: query.branch || \"master\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), __jsx(Sections, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, sections.map(function (section) {\n    return __jsx(Link, {\n      href: section.href,\n      key: section.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(SectionLink, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, section.label));\n  })), __jsx(ReactMarkdown, {\n    source: data.proposalBySlug.summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), __jsx(ReactMarkdown, {\n    source: data.proposalBySlug.legal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })));\n}\n\nProposalPage.getInitialProps = function (_ref2) {\n  var query = _ref2.query;\n  return {\n    query: query\n  };\n};\n\nexport default ProposalPage;","map":{"version":3,"sources":["/Users/nicholasbrown/Source/openlaw/components/ProposalPage.js"],"names":["fetch","Link","styled","MeactMarkdown","useRouter","withAuth","withLoginRequired","useQuery","MainLayout","ContentContainer","ProposalHeader","PROPOSAL_BY_SLUG_QUERY","ReactMarkdown","Sections","div","SectionLink","a","ProposalPage","auth","query","sections","currentSection","variables","slug","proposal","branchName","branch","loading","error","data","router","handleBranchSelect","selectedBranch","push","proposalBySlug","title","description","branches","map","section","href","label","summary","legal","getInitialProps"],"mappings":"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","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport MeactMarkdown from \"react-markdown\";\nimport { useRouter } from \"next/router\";\nimport { withAuth, withLoginRequired } from \"use-auth0-hooks\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport { ContentContainer, ProposalHeader } from \"components\";\nimport { PROPOSAL_BY_SLUG_QUERY } from \"../queries\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst Sections = styled.div`\n  display: flex;\n`;\n\nconst SectionLink = styled.a`\n  padding-right: 16px;\n`;\n\nfunction ProposalPage({ auth, query, sections, currentSection }) {\n  const { loading, error, data } = useQuery(PROPOSAL_BY_SLUG_QUERY, {\n    variables: { slug: query.proposal, branchName: query.branch }\n  });\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>Error: {JSON.stringify(error)}</p>;\n  }\n\n  const router = useRouter();\n\n  const handleBranchSelect = selectedBranch => {\n    if (selectedBranch !== query.branch) {\n      if (selectedBranch !== \"master\") {\n        router.push(`/p/${query.proposal}/branch/${selectedBranch}`);\n      } else {\n        router.push(`/p/${query.proposal}`);\n      }\n    }\n  };\n\n  return (\n    <MainLayout>\n      <ContentContainer>\n        <ProposalHeader\n          title={data.proposalBySlug.title}\n          description={data.proposalBySlug.description}\n          branches={data.proposalBySlug.branches}\n          onBranchSelect={handleBranchSelect}\n          currentBranch={query.branch || \"master\"}\n        />\n        <Sections>\n          {sections.map(section => (\n            <Link href={section.href} key={section.label}>\n              <SectionLink>{section.label}</SectionLink>\n            </Link>\n          ))}\n        </Sections>\n        <ReactMarkdown source={data.proposalBySlug.summary} />\n        <ReactMarkdown source={data.proposalBySlug.legal} />\n      </ContentContainer>\n    </MainLayout>\n  );\n}\n\nProposalPage.getInitialProps = ({ query }) => {\n  return { query };\n};\n\nexport default ProposalPage;\n"]},"metadata":{},"sourceType":"module"}