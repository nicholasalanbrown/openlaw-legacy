{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/nicholasbrown/Source/openlaw/components/ProposalPage.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport styled from \"styled-components\";\nimport MeactMarkdown from \"react-markdown\";\nimport { useRouter } from \"next/router\";\nimport MainLayout from \"../layouts/MainLayout\";\nimport { getProposalBranches, getProposalMetadata, getProposalSummary, getProposalLegal } from \"../queries\";\nimport ReactMarkdown from \"react-markdown\";\nvar router = useRouter();\nvar Wrapper = styled.div.withConfig({\n  displayName: \"ProposalPage__Wrapper\",\n  componentId: \"sc-1xdfroq-0\"\n})([\"display:flex;flex-direction:column;align-items:center;\"]);\nvar Containter = styled.div.withConfig({\n  displayName: \"ProposalPage__Containter\",\n  componentId: \"sc-1xdfroq-1\"\n})([\"font-size:18px;line-height:1.4;max-width:900px;padding:60px 20px 0;\"]);\n\nfunction Proposal(_ref) {\n  var branches = _ref.branches,\n      currentBranch = _ref.currentBranch,\n      metadata = _ref.metadata,\n      summary = _ref.summary,\n      legal = _ref.legal;\n\n  var handleBranchSelect = function handleBranchSelect(e) {\n    if (e.target.value !== currentBranch) {\n      router.push(\"www.google.com\");\n    }\n  };\n\n  return __jsx(MainLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(Containter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"select\", {\n    onChange: function onChange(e) {\n      return handleBranchSelect(e);\n    },\n    defaultValue: currentBranch || \"master\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, branches.map(function (branch) {\n    return __jsx(\"option\", {\n      key: branch.name,\n      value: branch.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, branch.name);\n  })), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, metadata.title), __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, metadata.description), __jsx(ReactMarkdown, {\n    source: summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(ReactMarkdown, {\n    source: legal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))));\n}\n\nProposal.getInitialProps = function _callee(context) {\n  var branches, currentBranch, metadata, summary, legal;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(getProposalBranches(1));\n\n        case 2:\n          branches = _context.sent;\n          currentBranch = context.query.branch || \"master\";\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(getProposalMetadata(1, currentBranch));\n\n        case 6:\n          metadata = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(getProposalSummary(1, currentBranch));\n\n        case 9:\n          summary = _context.sent;\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(getProposalLegal(1, currentBranch));\n\n        case 12:\n          legal = _context.sent;\n          return _context.abrupt(\"return\", {\n            branches: branches,\n            currentBranch: currentBranch,\n            metadata: metadata,\n            summary: summary,\n            legal: legal\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Proposal;","map":{"version":3,"sources":["/Users/nicholasbrown/Source/openlaw/components/ProposalPage.js"],"names":["fetch","styled","MeactMarkdown","useRouter","MainLayout","getProposalBranches","getProposalMetadata","getProposalSummary","getProposalLegal","ReactMarkdown","router","Wrapper","div","Containter","Proposal","branches","currentBranch","metadata","summary","legal","handleBranchSelect","e","target","value","push","map","branch","name","title","description","getInitialProps","context","query"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,gBAJF,QAKO,YALP;AAMA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,IAAMC,MAAM,GAAGP,SAAS,EAAxB;AAEA,IAAMQ,OAAO,GAAGV,MAAM,CAACW,GAAV;AAAA;AAAA;AAAA,8DAAb;AAMA,IAAMC,UAAU,GAAGZ,MAAM,CAACW,GAAV;AAAA;AAAA;AAAA,2EAAhB;;AAOA,SAASE,QAAT,OAAyE;AAAA,MAArDC,QAAqD,QAArDA,QAAqD;AAAA,MAA3CC,aAA2C,QAA3CA,aAA2C;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAlBC,OAAkB,QAAlBA,OAAkB;AAAA,MAATC,KAAS,QAATA,KAAS;;AACvE,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,CAAC,EAAI;AAC9B,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmBP,aAAvB,EAAsC;AACpCN,MAAAA,MAAM,CAACc,IAAP,CAAY,gBAAZ;AACD;AACF,GAJD;;AAMA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAE,kBAAAH,CAAC;AAAA,aAAID,kBAAkB,CAACC,CAAD,CAAtB;AAAA,KADb;AAEE,IAAA,YAAY,EAAEL,aAAa,IAAI,QAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGD,QAAQ,CAACU,GAAT,CAAa,UAAAC,MAAM;AAAA,WAClB;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACC,IAApB;AAA0B,MAAA,KAAK,EAAED,MAAM,CAACC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,MAAM,CAACC,IADV,CADkB;AAAA,GAAnB,CAJH,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,QAAQ,CAACW,KAAd,CAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,QAAQ,CAACY,WAAd,CAZF,EAaE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEX,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAcE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF,CADF,CADF;AAsBD;;AAEDL,QAAQ,CAACgB,eAAT,GAA2B,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACF1B,mBAAmB,CAAC,CAAD,CADjB;;AAAA;AACnBU,UAAAA,QADmB;AAEnBC,UAAAA,aAFmB,GAEHe,OAAO,CAACC,KAAR,CAAcN,MAAd,IAAwB,QAFrB;AAAA;AAAA,2CAGFpB,mBAAmB,CAAC,CAAD,EAAIU,aAAJ,CAHjB;;AAAA;AAGnBC,UAAAA,QAHmB;AAAA;AAAA,2CAIHV,kBAAkB,CAAC,CAAD,EAAIS,aAAJ,CAJf;;AAAA;AAInBE,UAAAA,OAJmB;AAAA;AAAA,2CAKLV,gBAAgB,CAAC,CAAD,EAAIQ,aAAJ,CALX;;AAAA;AAKnBG,UAAAA,KALmB;AAAA,2CAMlB;AAAEJ,YAAAA,QAAQ,EAARA,QAAF;AAAYC,YAAAA,aAAa,EAAbA,aAAZ;AAA2BC,YAAAA,QAAQ,EAARA,QAA3B;AAAqCC,YAAAA,OAAO,EAAPA,OAArC;AAA8CC,YAAAA,KAAK,EAALA;AAA9C,WANkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AASA,eAAeL,QAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport styled from \"styled-components\";\nimport MeactMarkdown from \"react-markdown\";\nimport { useRouter } from \"next/router\";\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport {\n  getProposalBranches,\n  getProposalMetadata,\n  getProposalSummary,\n  getProposalLegal\n} from \"../queries\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst router = useRouter();\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Containter = styled.div`\n  font-size: 18px;\n  line-height: 1.4;\n  max-width: 900px;\n  padding: 60px 20px 0;\n`;\n\nfunction Proposal({ branches, currentBranch, metadata, summary, legal }) {\n  const handleBranchSelect = e => {\n    if (e.target.value !== currentBranch) {\n      router.push(\"www.google.com\");\n    }\n  };\n\n  return (\n    <MainLayout>\n      <Wrapper>\n        <Containter>\n          <select\n            onChange={e => handleBranchSelect(e)}\n            defaultValue={currentBranch || \"master\"}\n          >\n            {branches.map(branch => (\n              <option key={branch.name} value={branch.name}>\n                {branch.name}\n              </option>\n            ))}\n          </select>\n          <h1>{metadata.title}</h1>\n          <h2>{metadata.description}</h2>\n          <ReactMarkdown source={summary} />\n          <ReactMarkdown source={legal} />\n        </Containter>\n      </Wrapper>\n    </MainLayout>\n  );\n}\n\nProposal.getInitialProps = async function(context) {\n  const branches = await getProposalBranches(1);\n  const currentBranch = context.query.branch || \"master\";\n  const metadata = await getProposalMetadata(1, currentBranch);\n  const summary = await getProposalSummary(1, currentBranch);\n  const legal = await getProposalLegal(1, currentBranch);\n  return { branches, currentBranch, metadata, summary, legal };\n};\n\nexport default Proposal;\n"]},"metadata":{},"sourceType":"module"}