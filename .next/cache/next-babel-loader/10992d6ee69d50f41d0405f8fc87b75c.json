{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasbrown/Source/openlaw/pages/[proposal]/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport styled from \"styled-components\";\nimport MeactMarkdown from \"react-markdown\";\nimport MainLayout from \"../layouts/MainLayout\";\nimport { getProposalMetadata, getProposalSummary, getProposalLegal } from \"../../queries\";\nimport ReactMarkdown from \"react-markdown\";\nconst Wrapper = styled.div.withConfig({\n  displayName: \"proposal__Wrapper\",\n  componentId: \"sc-1mkuvtg-0\"\n})([\"display:flex;flex-direction:column;align-items:center;\"]);\nconst Containter = styled.div.withConfig({\n  displayName: \"proposal__Containter\",\n  componentId: \"sc-1mkuvtg-1\"\n})([\"font-size:18px;line-height:1.4;max-width:900px;padding:60px 20px 160px;\"]);\n\nfunction Proposal({\n  metadata,\n  summary,\n  legal\n}) {\n  return __jsx(MainLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(Containter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, metadata.title), __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, metadata.description), __jsx(ReactMarkdown, {\n    source: summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(ReactMarkdown, {\n    source: legal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))));\n}\n\nProposal.getInitialProps = async function (context) {\n  console.log(context.query);\n  const metadata = await getProposalMetadata(1, context.query.branch);\n  const summary = await getProposalSummary(1, context.query.branch);\n  const legal = await getProposalLegal(1, context.query.branch);\n  return {\n    metadata,\n    summary,\n    legal\n  };\n};\n\nexport default Proposal;","map":{"version":3,"sources":["/Users/nicholasbrown/Source/openlaw/pages/[proposal]/index.js"],"names":["fetch","styled","MeactMarkdown","MainLayout","getProposalMetadata","getProposalSummary","getProposalLegal","ReactMarkdown","Wrapper","div","Containter","Proposal","metadata","summary","legal","title","description","getInitialProps","context","console","log","query","branch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SACEC,mBADF,EAEEC,kBAFF,EAGEC,gBAHF,QAIO,eAJP;AAKA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,MAAMC,OAAO,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,8DAAb;AAMA,MAAMC,UAAU,GAAGT,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,+EAAhB;;AAOA,SAASE,QAAT,CAAkB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAlB,EAAgD;AAC9C,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,QAAQ,CAACG,KAAd,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,QAAQ,CAACI,WAAd,CAFF,EAGE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEH,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF,CADF;AAYD;;AAEDH,QAAQ,CAACM,eAAT,GAA2B,gBAAeC,OAAf,EAAwB;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,KAApB;AACA,QAAMT,QAAQ,GAAG,MAAMR,mBAAmB,CAAC,CAAD,EAAIc,OAAO,CAACG,KAAR,CAAcC,MAAlB,CAA1C;AACA,QAAMT,OAAO,GAAG,MAAMR,kBAAkB,CAAC,CAAD,EAAIa,OAAO,CAACG,KAAR,CAAcC,MAAlB,CAAxC;AACA,QAAMR,KAAK,GAAG,MAAMR,gBAAgB,CAAC,CAAD,EAAIY,OAAO,CAACG,KAAR,CAAcC,MAAlB,CAApC;AACA,SAAO;AAAEV,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,GAAP;AACD,CAND;;AAQA,eAAeH,QAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport styled from \"styled-components\";\nimport MeactMarkdown from \"react-markdown\";\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport {\n  getProposalMetadata,\n  getProposalSummary,\n  getProposalLegal\n} from \"../../queries\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Containter = styled.div`\n  font-size: 18px;\n  line-height: 1.4;\n  max-width: 900px;\n  padding: 60px 20px 160px;\n`;\n\nfunction Proposal({ metadata, summary, legal }) {\n  return (\n    <MainLayout>\n      <Wrapper>\n        <Containter>\n          <h1>{metadata.title}</h1>\n          <h2>{metadata.description}</h2>\n          <ReactMarkdown source={summary} />\n          <ReactMarkdown source={legal} />\n        </Containter>\n      </Wrapper>\n    </MainLayout>\n  );\n}\n\nProposal.getInitialProps = async function(context) {\n  console.log(context.query);\n  const metadata = await getProposalMetadata(1, context.query.branch);\n  const summary = await getProposalSummary(1, context.query.branch);\n  const legal = await getProposalLegal(1, context.query.branch);\n  return { metadata, summary, legal };\n};\n\nexport default Proposal;\n"]},"metadata":{},"sourceType":"module"}