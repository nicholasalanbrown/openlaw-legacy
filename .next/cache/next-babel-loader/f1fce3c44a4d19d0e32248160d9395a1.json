{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProposalBySlug($slug: String!, $branchName: String) {\\n    proposalBySlug(slug: $slug, branchName: $branchName) {\\n      id\\n      title\\n      description\\n      summary\\n      legal\\n      branches\\n      commits {\\n        id\\n        title\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nvar PROPOSAL_BY_SLUG_QUERY = gql(_templateObject());\nexport default PROPOSAL_BY_SLUG_QUERY;","map":{"version":3,"sources":["/Users/nicholasbrown/Source/openlaw/queries/proposalBySlug.query.js"],"names":["gql","PROPOSAL_BY_SLUG_QUERY"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,IAAMC,sBAAsB,GAAGD,GAAH,mBAA5B;AAiBA,eAAeC,sBAAf","sourcesContent":["import gql from 'graphql-tag';\n\nconst PROPOSAL_BY_SLUG_QUERY = gql`\n  query getProposalBySlug($slug: String!, $branchName: String) {\n    proposalBySlug(slug: $slug, branchName: $branchName) {\n      id\n      title\n      description\n      summary\n      legal\n      branches\n      commits {\n        id\n        title\n      }\n    }\n  }\n`;\n\nexport default PROPOSAL_BY_SLUG_QUERY;\n"]},"metadata":{},"sourceType":"module"}