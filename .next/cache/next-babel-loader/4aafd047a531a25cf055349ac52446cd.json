{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicholasbrown/Source/openlaw/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport App from \"next/app\";\nimport Router from \"next/router\";\nimport { ApolloClient, ApolloProvider, HttpLink, InMemoryCache } from \"@apollo/client\";\nimport fetch from \"isomorphic-unfetch\";\nvar client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: process.env.API_URI,\n    fetch: fetch\n  })\n});\n\nvar Root =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(Root, _App);\n\n  function Root() {\n    _classCallCheck(this, Root);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Root).apply(this, arguments));\n  }\n\n  _createClass(Root, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(ApolloProvider, {\n        client: client,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Root;\n}(App);\n\nexport { Root as default };","map":{"version":3,"sources":["/Users/nicholasbrown/Source/openlaw/pages/_app.js"],"names":["App","Router","ApolloClient","ApolloProvider","HttpLink","InMemoryCache","fetch","client","cache","link","uri","process","env","API_URI","Root","props","Component","pageProps"],"mappings":";;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,QAHF,EAIEC,aAJF,QAKO,gBALP;AAMA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,IAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,KAAK,EAAE,IAAIH,aAAJ,EADuB;AAE9BI,EAAAA,IAAI,EAAE,IAAIL,QAAJ,CAAa;AACjBM,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,OADA;AAEjBP,IAAAA,KAAK,EAALA;AAFiB,GAAb;AAFwB,CAAjB,CAAf;;IAQqBQ,I;;;;;;;;;;;;;6BACV;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAGP,aACE,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAEV,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD,eAAeU,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAKD;;;;EAT+BjB,G;;SAAbc,I","sourcesContent":["import App from \"next/app\";\nimport Router from \"next/router\";\nimport {\n  ApolloClient,\n  ApolloProvider,\n  HttpLink,\n  InMemoryCache\n} from \"@apollo/client\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: process.env.API_URI,\n    fetch\n  })\n});\n\nexport default class Root extends App {\n  render() {\n    const { Component, pageProps } = this.props;\n\n    return (\n      <ApolloProvider client={client}>\n        <Component {...pageProps} />\n      </ApolloProvider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}