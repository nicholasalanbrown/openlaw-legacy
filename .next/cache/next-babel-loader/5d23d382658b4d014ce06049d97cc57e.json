{"ast":null,"code":"import fetch from \"isomorphic-unfetch\";\nexport const getProposals = async () => {\n  const res = await fetch(`${process.env.GITLAB_BASE_URL}/projects`).then(response => response.json()).then(data => data);\n  return res;\n};\nexport const getProposalMetadata = async (gitlabProjectId, refName = \"master\") => {\n  const res = await fetch(`${process.env.GITLAB_BASE_URL}/projects/${gitlabProjectId}/repository/files/metadata%2Ejson/raw?ref=${refName}`).then(response => response.json()).then(data => data);\n  return res;\n};\nexport const getProposalSummary = async (gitlabProjectId, refName = \"master\") => {\n  const res = await fetch(`${process.env.GITLAB_BASE_URL}/projects/${gitlabProjectId}/repository/files/summary%2Emd/raw?ref=${refName}`).then(response => response.text()).then(data => data);\n  return res;\n};\nexport const getProposalLegal = async (gitlabProjectId, refName = \"master\") => {\n  const res = await fetch(`${process.env.GITLAB_BASE_URL}/projects/${gitlabProjectId}/repository/files/legal%2Emd/raw?ref=${refName}`).then(response => response.text()).then(data => data);\n  return res;\n};","map":{"version":3,"sources":["/Users/nicholasbrown/Source/openlaw/queries/index.js"],"names":["fetch","getProposals","res","process","env","GITLAB_BASE_URL","then","response","json","data","getProposalMetadata","gitlabProjectId","refName","getProposalSummary","text","getProposalLegal"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,YAAY;AACtC,QAAMC,GAAG,GAAG,MAAMF,KAAK,CAAE,GAAEG,OAAO,CAACC,GAAR,CAAYC,eAAgB,WAAhC,CAAL,CACfC,IADe,CACVC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADF,EAEfF,IAFe,CAEVG,IAAI,IAAIA,IAFE,CAAlB;AAGA,SAAOP,GAAP;AACD,CALM;AAOP,OAAO,MAAMQ,mBAAmB,GAAG,OACjCC,eADiC,EAEjCC,OAAO,GAAG,QAFuB,KAG9B;AACH,QAAMV,GAAG,GAAG,MAAMF,KAAK,CACpB,GAAEG,OAAO,CAACC,GAAR,CAAYC,eAAgB,aAAYM,eAAgB,6CAA4CC,OAAQ,EAD1F,CAAL,CAGfN,IAHe,CAGVC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHF,EAIfF,IAJe,CAIVG,IAAI,IAAIA,IAJE,CAAlB;AAKA,SAAOP,GAAP;AACD,CAVM;AAYP,OAAO,MAAMW,kBAAkB,GAAG,OAChCF,eADgC,EAEhCC,OAAO,GAAG,QAFsB,KAG7B;AACH,QAAMV,GAAG,GAAG,MAAMF,KAAK,CACpB,GAAEG,OAAO,CAACC,GAAR,CAAYC,eAAgB,aAAYM,eAAgB,0CAAyCC,OAAQ,EADvF,CAAL,CAGfN,IAHe,CAGVC,QAAQ,IAAIA,QAAQ,CAACO,IAAT,EAHF,EAIfR,IAJe,CAIVG,IAAI,IAAIA,IAJE,CAAlB;AAKA,SAAOP,GAAP;AACD,CAVM;AAYP,OAAO,MAAMa,gBAAgB,GAAG,OAAOJ,eAAP,EAAwBC,OAAO,GAAG,QAAlC,KAA+C;AAC7E,QAAMV,GAAG,GAAG,MAAMF,KAAK,CACpB,GAAEG,OAAO,CAACC,GAAR,CAAYC,eAAgB,aAAYM,eAAgB,wCAAuCC,OAAQ,EADrF,CAAL,CAGfN,IAHe,CAGVC,QAAQ,IAAIA,QAAQ,CAACO,IAAT,EAHF,EAIfR,IAJe,CAIVG,IAAI,IAAIA,IAJE,CAAlB;AAKA,SAAOP,GAAP;AACD,CAPM","sourcesContent":["import fetch from \"isomorphic-unfetch\";\n\nexport const getProposals = async () => {\n  const res = await fetch(`${process.env.GITLAB_BASE_URL}/projects`)\n    .then(response => response.json())\n    .then(data => data);\n  return res;\n};\n\nexport const getProposalMetadata = async (\n  gitlabProjectId,\n  refName = \"master\"\n) => {\n  const res = await fetch(\n    `${process.env.GITLAB_BASE_URL}/projects/${gitlabProjectId}/repository/files/metadata%2Ejson/raw?ref=${refName}`\n  )\n    .then(response => response.json())\n    .then(data => data);\n  return res;\n};\n\nexport const getProposalSummary = async (\n  gitlabProjectId,\n  refName = \"master\"\n) => {\n  const res = await fetch(\n    `${process.env.GITLAB_BASE_URL}/projects/${gitlabProjectId}/repository/files/summary%2Emd/raw?ref=${refName}`\n  )\n    .then(response => response.text())\n    .then(data => data);\n  return res;\n};\n\nexport const getProposalLegal = async (gitlabProjectId, refName = \"master\") => {\n  const res = await fetch(\n    `${process.env.GITLAB_BASE_URL}/projects/${gitlabProjectId}/repository/files/legal%2Emd/raw?ref=${refName}`\n  )\n    .then(response => response.text())\n    .then(data => data);\n  return res;\n};\n"]},"metadata":{},"sourceType":"module"}