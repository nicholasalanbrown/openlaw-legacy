{"ast":null,"code":"import fetch from \"isomorphic-unfetch\";\nexport var getProposalContent = function getProposalContent(gitlabProjectId) {\n  var refName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"master\";\n  return fetch(\"\".concat(process.env.GITLAB_BASE_URL, \"/projects/\").concat(gitlabProjectId, \"/repository/files/README%2Emd/raw?ref_name=\").concat(refName));\n};","map":{"version":3,"sources":["/Users/nicholasbrown/Source/openlaw/queries/index.js"],"names":["fetch","getProposalContent","gitlabProjectId","refName","process","env","GITLAB_BASE_URL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,eAAD,EAAyC;AAAA,MAAvBC,OAAuB,uEAAb,QAAa;AACzE,SAAOH,KAAK,WACPI,OAAO,CAACC,GAAR,CAAYC,eADL,uBACiCJ,eADjC,wDAC8FC,OAD9F,EAAZ;AAGD,CAJM","sourcesContent":["import fetch from \"isomorphic-unfetch\";\n\nexport const getProposalContent = (gitlabProjectId, refName = \"master\") => {\n  return fetch(\n    `${process.env.GITLAB_BASE_URL}/projects/${gitlabProjectId}/repository/files/README%2Emd/raw?ref_name=${refName}`\n  );\n};\n"]},"metadata":{},"sourceType":"module"}