{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasbrown/Source/openlaw/components/RichTextEditor.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useMemo } from \"react\";\nimport { createEditor } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\nimport { withHistory } from \"slate-history\";\nimport styled from \"styled-components\";\nvar StyledEditable = styled(Editable).withConfig({\n  displayName: \"RichTextEditor__StyledEditable\",\n  componentId: \"qlh8hx-0\"\n})([\"border:1px solid #ccc;margin-top:30px;padding:12px 8px;&:placeholder{color:#757575;opacity:1 !important;}\"]);\n\nvar RichTextEditor = function RichTextEditor(_ref) {\n  var placeholder = _ref.placeholder;\n\n  var _useState = useState([{\n    children: [{\n      text: \"\"\n    }]\n  }]),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var handleChange = function handleChange(value) {\n    console.log(value);\n    setValue(value);\n  };\n\n  var editor = useMemo(function () {\n    return withHistory(withReact(createEditor()));\n  }, []);\n  return __jsx(Slate, {\n    editor: editor,\n    value: value,\n    onChange: function onChange(value) {\n      return handleChange(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(StyledEditable, {\n    placeholder: placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nvar initialValue = [{\n  children: [{\n    text: \"This is editable plain text, just like a <textarea>!\"\n  }]\n}];\nexport default RichTextEditor;","map":{"version":3,"sources":["/Users/nicholasbrown/Source/openlaw/components/RichTextEditor.js"],"names":["React","useState","useMemo","createEditor","Slate","Editable","withReact","withHistory","styled","StyledEditable","RichTextEditor","placeholder","children","text","value","setValue","handleChange","console","log","editor","initialValue"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,SAASC,YAAT,QAA6B,OAA7B;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,aAA3C;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,cAAc,GAAGD,MAAM,CAACH,QAAD,CAAT;AAAA;AAAA;AAAA,iHAApB;;AAUA,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,OAAqB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAAA,kBAChBV,QAAQ,CAAC,CACjC;AACEW,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,IAAI,EAAE;AADR,KADQ;AADZ,GADiC,CAAD,CADQ;AAAA,MACnCC,KADmC;AAAA,MAC5BC,QAD4B;;AAW1C,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAF,KAAK,EAAI;AAC5BG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAHD;;AAKA,MAAMK,MAAM,GAAGjB,OAAO,CAAC;AAAA,WAAMK,WAAW,CAACD,SAAS,CAACH,YAAY,EAAb,CAAV,CAAjB;AAAA,GAAD,EAA+C,EAA/C,CAAtB;AACA,SACE,MAAC,KAAD;AACE,IAAA,MAAM,EAAEgB,MADV;AAEE,IAAA,KAAK,EAAEL,KAFT;AAGE,IAAA,QAAQ,EAAE,kBAAAA,KAAK;AAAA,aAAIE,YAAY,CAACF,KAAD,CAAhB;AAAA,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,cAAD;AAAgB,IAAA,WAAW,EAAEH,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CA1BD;;AA4BA,IAAMS,YAAY,GAAG,CACnB;AACER,EAAAA,QAAQ,EAAE,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD;AADZ,CADmB,CAArB;AAMA,eAAeH,cAAf","sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport { createEditor } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\nimport { withHistory } from \"slate-history\";\nimport styled from \"styled-components\";\n\nconst StyledEditable = styled(Editable)`\n  border: 1px solid #ccc;\n  margin-top: 30px;\n  padding: 12px 8px;\n  &:placeholder {\n    color: #757575;\n    opacity: 1 !important;\n  }\n`;\n\nconst RichTextEditor = ({ placeholder }) => {\n  const [value, setValue] = useState([\n    {\n      children: [\n        {\n          text: \"\"\n        }\n      ]\n    }\n  ]);\n\n  const handleChange = value => {\n    console.log(value);\n    setValue(value);\n  };\n\n  const editor = useMemo(() => withHistory(withReact(createEditor())), []);\n  return (\n    <Slate\n      editor={editor}\n      value={value}\n      onChange={value => handleChange(value)}\n    >\n      <StyledEditable placeholder={placeholder} />\n    </Slate>\n  );\n};\n\nconst initialValue = [\n  {\n    children: [{ text: \"This is editable plain text, just like a <textarea>!\" }]\n  }\n];\n\nexport default RichTextEditor;\n"]},"metadata":{},"sourceType":"module"}