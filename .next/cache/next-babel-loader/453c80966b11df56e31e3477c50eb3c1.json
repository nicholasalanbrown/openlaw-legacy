{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CreateProposal(\\n    $title: String!\\n    $descriptipn: String!\\n    $summary: String\\n    $legal: String\\n  ) {\\n    createProposal(\\n      title: $title\\n      description: $description\\n      summary: $summary\\n      legal: legal\\n    ) {\\n      id\\n      title\\n      slug\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar CREATE_PROPOSAL_MUTATION = gql(_templateObject());\nexport default CREATE_PROPOSAL_MUTATION;","map":{"version":3,"sources":["/Users/nicholasbrown/Source/openlaw/mutations/createProposal.mutation.js"],"names":["CREATE_PROPOSAL_MUTATION","gql"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,wBAAwB,GAAGC,GAAH,mBAA9B;AAoBA,eAAeD,wBAAf","sourcesContent":["const CREATE_PROPOSAL_MUTATION = gql`\n  mutation CreateProposal(\n    $title: String!\n    $descriptipn: String!\n    $summary: String\n    $legal: String\n  ) {\n    createProposal(\n      title: $title\n      description: $description\n      summary: $summary\n      legal: legal\n    ) {\n      id\n      title\n      slug\n    }\n  }\n`;\n\nexport default CREATE_PROPOSAL_MUTATION;\n"]},"metadata":{},"sourceType":"module"}