{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/nicholasbrown/Source/openlaw/components/ProposalPage.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport styled from \"styled-components\";\nimport MeactMarkdown from \"react-markdown\";\nimport { useRouter } from \"next/router\";\nimport { withAuth, withLoginRequired } from \"use-auth0-hooks\";\nimport MainLayout from \"../layouts/MainLayout\";\nimport { ContentContainer } from \"./\";\nimport { getProposalBranches, getProposalMetadata, getProposalSummary, getProposalLegal } from \"../queries\";\nimport ReactMarkdown from \"react-markdown\";\nvar Wrapper = styled.div.withConfig({\n  displayName: \"ProposalPage__Wrapper\",\n  componentId: \"sc-1xdfroq-0\"\n})([\"display:flex;flex-direction:column;align-items:center;\"]);\nvar Containter = styled.div.withConfig({\n  displayName: \"ProposalPage__Containter\",\n  componentId: \"sc-1xdfroq-1\"\n})([\"font-size:18px;line-height:1.4;max-width:900px;padding:60px 20px 0;\"]);\n\nfunction Proposal(_ref) {\n  var auth = _ref.auth,\n      branches = _ref.branches,\n      currentBranch = _ref.currentBranch,\n      metadata = _ref.metadata,\n      summary = _ref.summary,\n      legal = _ref.legal;\n  var router = useRouter();\n\n  var handleBranchSelect = function handleBranchSelect(e) {\n    var selectedBranch = e.target.value;\n\n    if (selectedBranch !== currentBranch) {\n      if (selectedBranch !== \"master\") {\n        router.push(\"/hello/tree/\".concat(selectedBranch));\n      } else {\n        router.push(\"/hello\");\n      }\n    }\n  };\n\n  return __jsx(MainLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(ContentContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"select\", {\n    onChange: function onChange(e) {\n      return handleBranchSelect(e);\n    },\n    defaultValue: currentBranch || \"master\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, branches.map(function (branch) {\n    return __jsx(\"option\", {\n      key: branch.name,\n      value: branch.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, branch.name);\n  })), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, metadata.title), __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, metadata.description), __jsx(ReactMarkdown, {\n    source: summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), __jsx(ReactMarkdown, {\n    source: legal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })));\n}\n\nProposal.getInitialProps = function _callee(context) {\n  var allBranches, branches, currentBranch, metadata, summary, legal;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(getProposalBranches(1));\n\n        case 2:\n          allBranches = _context.sent;\n          branches = allBranches.filter(function (branch) {\n            return branch.merged === false;\n          });\n          currentBranch = context.query.branch || \"master\";\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(getProposalMetadata(1, currentBranch));\n\n        case 7:\n          metadata = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(getProposalSummary(1, currentBranch));\n\n        case 10:\n          summary = _context.sent;\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(getProposalLegal(1, currentBranch));\n\n        case 13:\n          legal = _context.sent;\n          return _context.abrupt(\"return\", {\n            branches: branches,\n            currentBranch: currentBranch,\n            metadata: metadata,\n            summary: summary,\n            legal: legal\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withLoginRequired(withAuth(Proposal));","map":{"version":3,"sources":["/Users/nicholasbrown/Source/openlaw/components/ProposalPage.js"],"names":["fetch","styled","MeactMarkdown","useRouter","withAuth","withLoginRequired","MainLayout","ContentContainer","getProposalBranches","getProposalMetadata","getProposalSummary","getProposalLegal","ReactMarkdown","Wrapper","div","Containter","Proposal","auth","branches","currentBranch","metadata","summary","legal","router","handleBranchSelect","e","selectedBranch","target","value","push","map","branch","name","title","description","getInitialProps","context","allBranches","filter","merged","query"],"mappings":"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","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport styled from \"styled-components\";\nimport MeactMarkdown from \"react-markdown\";\nimport { useRouter } from \"next/router\";\nimport { withAuth, withLoginRequired } from \"use-auth0-hooks\";\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport { ContentContainer } from \"components\";\nimport {\n  getProposalBranches,\n  getProposalMetadata,\n  getProposalSummary,\n  getProposalLegal\n} from \"../queries\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Containter = styled.div`\n  font-size: 18px;\n  line-height: 1.4;\n  max-width: 900px;\n  padding: 60px 20px 0;\n`;\n\nfunction Proposal({ auth, branches, currentBranch, metadata, summary, legal }) {\n  const router = useRouter();\n\n  const handleBranchSelect = e => {\n    const selectedBranch = e.target.value;\n    if (selectedBranch !== currentBranch) {\n      if (selectedBranch !== \"master\") {\n        router.push(`/hello/tree/${selectedBranch}`);\n      } else {\n        router.push(\"/hello\");\n      }\n    }\n  };\n\n  return (\n    <MainLayout>\n      <ContentContainer>\n        <select\n          onChange={e => handleBranchSelect(e)}\n          defaultValue={currentBranch || \"master\"}\n        >\n          {branches.map(branch => (\n            <option key={branch.name} value={branch.name}>\n              {branch.name}\n            </option>\n          ))}\n        </select>\n        <h1>{metadata.title}</h1>\n        <h2>{metadata.description}</h2>\n        <ReactMarkdown source={summary} />\n        <ReactMarkdown source={legal} />\n      </ContentContainer>\n    </MainLayout>\n  );\n}\n\nProposal.getInitialProps = async function(context) {\n  const allBranches = await getProposalBranches(1);\n  const branches = allBranches.filter(branch => branch.merged === false);\n  const currentBranch = context.query.branch || \"master\";\n  const metadata = await getProposalMetadata(1, currentBranch);\n  const summary = await getProposalSummary(1, currentBranch);\n  const legal = await getProposalLegal(1, currentBranch);\n  return { branches, currentBranch, metadata, summary, legal };\n};\n\nexport default withLoginRequired(withAuth(Proposal));\n"]},"metadata":{},"sourceType":"module"}