{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasbrown/Source/openlaw/pages/p/[proposal]/commits/[branch].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport MainLayout from \"../../../../layouts/MainLayout\";\nimport { ContentContainer, ProposalHeader, Row } from \"../../../../components\";\nimport { PROPOSAL_BY_SLUG_QUERY } from \"../../../../queries\";\n\nfunction Commits({\n  query\n}) {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(PROPOSAL_BY_SLUG_QUERY, {\n    variables: {\n      slug: query.proposal,\n      branchName: query.branch\n    }\n  });\n  return __jsx(MainLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(ContentContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(ProposalHeader, {\n    sections: [{\n      label: \"Content\",\n      href: `/p/${query.proposal}`\n    }, {\n      label: \"Commits\",\n      href: `/p/${query.proposal}/commits`\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), !loading && data && data.proposalBySlug.commits.map(commit => __jsx(Row, {\n    key: commit.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, commit.title))));\n}\n\nCommits.getInitialProps = ({\n  query\n}) => {\n  return {\n    query\n  };\n};\n\nexport default Commits;","map":{"version":3,"sources":["/Users/nicholasbrown/Source/openlaw/pages/p/[proposal]/commits/[branch].js"],"names":["fetch","styled","useQuery","MainLayout","ContentContainer","ProposalHeader","Row","PROPOSAL_BY_SLUG_QUERY","Commits","query","loading","error","data","variables","slug","proposal","branchName","branch","label","href","proposalBySlug","commits","map","commit","id","title","getInitialProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,UAAP,MAAuB,gCAAvB;SACSC,gB,EAAkBC,c,EAAgBC,G;AAC3C,SAASC,sBAAT,QAAuC,qBAAvC;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA4B;AAC1B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACK,sBAAD,EAAyB;AAChEM,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAEL,KAAK,CAACM,QADH;AAETC,MAAAA,UAAU,EAAEP,KAAK,CAACQ;AAFT;AADqD,GAAzB,CAAzC;AAOA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AACE,IAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,SADT;AAEEC,MAAAA,IAAI,EAAG,MAAKV,KAAK,CAACM,QAAS;AAF7B,KADQ,EAKR;AACEG,MAAAA,KAAK,EAAE,SADT;AAEEC,MAAAA,IAAI,EAAG,MAAKV,KAAK,CAACM,QAAS;AAF7B,KALQ,CADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaG,CAACL,OAAD,IACCE,IADD,IAECA,IAAI,CAACQ,cAAL,CAAoBC,OAApB,CAA4BC,GAA5B,CAAgCC,MAAM,IACpC,MAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,MAAM,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBD,MAAM,CAACE,KAA7B,CADF,CAfJ,CADF,CADF;AAuBD;;AAEDjB,OAAO,CAACkB,eAAR,GAA0B,CAAC;AAAEjB,EAAAA;AAAF,CAAD,KAAe;AACvC,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CAFD;;AAIA,eAAeD,OAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport MainLayout from \"../../../../layouts/MainLayout\";\nimport { ContentContainer, ProposalHeader, Row } from \"components\";\nimport { PROPOSAL_BY_SLUG_QUERY } from \"../../../../queries\";\n\nfunction Commits({ query }) {\n  const { loading, error, data } = useQuery(PROPOSAL_BY_SLUG_QUERY, {\n    variables: {\n      slug: query.proposal,\n      branchName: query.branch\n    }\n  });\n\n  return (\n    <MainLayout>\n      <ContentContainer>\n        <ProposalHeader\n          sections={[\n            {\n              label: \"Content\",\n              href: `/p/${query.proposal}`\n            },\n            {\n              label: \"Commits\",\n              href: `/p/${query.proposal}/commits`\n            }\n          ]}\n        />\n        {!loading &&\n          data &&\n          data.proposalBySlug.commits.map(commit => (\n            <Row key={commit.id}>{commit.title}</Row>\n          ))}\n      </ContentContainer>\n    </MainLayout>\n  );\n}\n\nCommits.getInitialProps = ({ query }) => {\n  return { query };\n};\n\nexport default Commits;\n"]},"metadata":{},"sourceType":"module"}