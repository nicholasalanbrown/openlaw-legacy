{"ast":null,"code":"import gql from 'graphql-tag';\nconst COMMIT_TO_BRANCH_MUTATION = gql`\n  mutation CommitToBranch(\n    $proposalId: String!\n    $branchName: String!\n    $title: String!\n    $description: String!\n    $summary: String!\n    $legal: String!\n    $message: String!\n  ) {\n    createProposal(\n        proposalId: $proposalId\n        branchName: $branchName\n        title: $title\n        description: $description\n        summary: $summary\n        legal: $legal\n        message: $message\n    ) {\n      id\n      title\n    }\n  }\n`;\nexport default COMMIT_TO_BRANCH_MUTATION;","map":{"version":3,"sources":["/Users/nicholasbrown/Source/openlaw/mutations/commitToBranch.mutation.js"],"names":["gql","COMMIT_TO_BRANCH_MUTATION"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,MAAMC,yBAAyB,GAAGD,GAAI;;;;;;;;;;;;;;;;;;;;;;;CAAtC;AAyBA,eAAeC,yBAAf","sourcesContent":["import gql from 'graphql-tag';\n\nconst COMMIT_TO_BRANCH_MUTATION = gql`\n  mutation CommitToBranch(\n    $proposalId: String!\n    $branchName: String!\n    $title: String!\n    $description: String!\n    $summary: String!\n    $legal: String!\n    $message: String!\n  ) {\n    createProposal(\n        proposalId: $proposalId\n        branchName: $branchName\n        title: $title\n        description: $description\n        summary: $summary\n        legal: $legal\n        message: $message\n    ) {\n      id\n      title\n    }\n  }\n`;\n\nexport default COMMIT_TO_BRANCH_MUTATION;\n"]},"metadata":{},"sourceType":"module"}