{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/nicholasbrown/Source/openlaw/components/ProposalPage.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport MeactMarkdown from 'react-markdown';\nimport { useRouter } from 'next/router';\nimport { withAuth, withLoginRequired } from 'use-auth0-hooks';\nimport { useQuery } from '@apollo/react-hooks';\nimport { ContentContainer, ProposalHeader } from \"./\";\nimport ReactMarkdown from 'react-markdown';\nimport MainLayout from '../layouts/MainLayout';\nimport { PROPOSAL_BY_SLUG_QUERY } from '../queries';\n\nfunction ProposalPage({\n  auth,\n  query,\n  sections,\n  currentSection\n}) {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(PROPOSAL_BY_SLUG_QUERY, {\n    variables: {\n      slug: query.proposal,\n      branchName: query.branch\n    }\n  });\n\n  if (loading) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Error:\", ' ', _JSON$stringify(error));\n  }\n\n  const router = useRouter();\n\n  const handleBranchSelect = selectedBranch => {\n    if (selectedBranch !== query.branch) {\n      if (selectedBranch !== 'master') {\n        router.push(`/p/${query.proposal}/branch/${selectedBranch}`);\n      } else {\n        router.push(`/p/${query.proposal}`);\n      }\n    }\n  };\n\n  return __jsx(MainLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(ContentContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(ProposalHeader, {\n    title: data.proposalBySlug.title,\n    description: data.proposalBySlug.description,\n    branches: data.proposalBySlug.branches,\n    onBranchSelect: handleBranchSelect,\n    currentBranch: query.branch || 'master',\n    sections: sections,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), __jsx(ReactMarkdown, {\n    source: data.proposalBySlug.summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), __jsx(ReactMarkdown, {\n    source: data.proposalBySlug.legal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })));\n}\n\nProposalPage.getInitialProps = ({\n  query\n}) => ({\n  query\n});\n\nexport default ProposalPage;","map":{"version":3,"sources":["/Users/nicholasbrown/Source/openlaw/components/ProposalPage.js"],"names":["React","fetch","Link","styled","MeactMarkdown","useRouter","withAuth","withLoginRequired","useQuery","ContentContainer","ProposalHeader","ReactMarkdown","MainLayout","PROPOSAL_BY_SLUG_QUERY","ProposalPage","auth","query","sections","currentSection","loading","error","data","variables","slug","proposal","branchName","branch","router","handleBranchSelect","selectedBranch","push","proposalBySlug","title","description","branches","summary","legal","getInitialProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,EAAmBC,iBAAnB,QAA4C,iBAA5C;AACA,SAASC,QAAT,QAAyB,qBAAzB;SAESC,gB,EAAkBC,c;AAC3B,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,sBAAT,QAAuC,YAAvC;;AAEA,SAASC,YAAT,CAAsB;AACpBC,EAAAA,IADoB;AACdC,EAAAA,KADc;AACPC,EAAAA,QADO;AACGC,EAAAA;AADH,CAAtB,EAEG;AACD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bb,QAAQ,CAACK,sBAAD,EAAyB;AAChES,IAAAA,SAAS,EAAE;AAAEC,MAAAA,IAAI,EAAEP,KAAK,CAACQ,QAAd;AAAwBC,MAAAA,UAAU,EAAET,KAAK,CAACU;AAA1C;AADqD,GAAzB,CAAzC;;AAIA,MAAIP,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEG,GAFH,EAGG,gBAAeA,KAAf,CAHH,CADF;AAOD;;AAED,QAAMO,MAAM,GAAGtB,SAAS,EAAxB;;AAEA,QAAMuB,kBAAkB,GAAIC,cAAD,IAAoB;AAC7C,QAAIA,cAAc,KAAKb,KAAK,CAACU,MAA7B,EAAqC;AACnC,UAAIG,cAAc,KAAK,QAAvB,EAAiC;AAC/BF,QAAAA,MAAM,CAACG,IAAP,CAAa,MAAKd,KAAK,CAACQ,QAAS,WAAUK,cAAe,EAA1D;AACD,OAFD,MAEO;AACLF,QAAAA,MAAM,CAACG,IAAP,CAAa,MAAKd,KAAK,CAACQ,QAAS,EAAjC;AACD;AACF;AACF,GARD;;AAUA,SACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AACE,IAAA,KAAK,EAAEH,IAAI,CAACU,cAAL,CAAoBC,KAD7B;AAEE,IAAA,WAAW,EAAEX,IAAI,CAACU,cAAL,CAAoBE,WAFnC;AAGE,IAAA,QAAQ,EAAEZ,IAAI,CAACU,cAAL,CAAoBG,QAHhC;AAIE,IAAA,cAAc,EAAEN,kBAJlB;AAKE,IAAA,aAAa,EAAEZ,KAAK,CAACU,MAAN,IAAgB,QALjC;AAME,IAAA,QAAQ,EAAET,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEI,IAAI,CAACU,cAAL,CAAoBI,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEd,IAAI,CAACU,cAAL,CAAoBK,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CADF;AAgBD;;AAEDtB,YAAY,CAACuB,eAAb,GAA+B,CAAC;AAAErB,EAAAA;AAAF,CAAD,MAAgB;AAAEA,EAAAA;AAAF,CAAhB,CAA/B;;AAEA,eAAeF,YAAf","sourcesContent":["import React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport MeactMarkdown from 'react-markdown';\nimport { useRouter } from 'next/router';\nimport { withAuth, withLoginRequired } from 'use-auth0-hooks';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { ContentContainer, ProposalHeader } from 'components';\nimport ReactMarkdown from 'react-markdown';\nimport MainLayout from '../layouts/MainLayout';\nimport { PROPOSAL_BY_SLUG_QUERY } from '../queries';\n\nfunction ProposalPage({\n  auth, query, sections, currentSection,\n}) {\n  const { loading, error, data } = useQuery(PROPOSAL_BY_SLUG_QUERY, {\n    variables: { slug: query.proposal, branchName: query.branch },\n  });\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return (\n      <p>\n        Error:\n        {' '}\n        {JSON.stringify(error)}\n      </p>\n    );\n  }\n\n  const router = useRouter();\n\n  const handleBranchSelect = (selectedBranch) => {\n    if (selectedBranch !== query.branch) {\n      if (selectedBranch !== 'master') {\n        router.push(`/p/${query.proposal}/branch/${selectedBranch}`);\n      } else {\n        router.push(`/p/${query.proposal}`);\n      }\n    }\n  };\n\n  return (\n    <MainLayout>\n      <ContentContainer>\n        <ProposalHeader\n          title={data.proposalBySlug.title}\n          description={data.proposalBySlug.description}\n          branches={data.proposalBySlug.branches}\n          onBranchSelect={handleBranchSelect}\n          currentBranch={query.branch || 'master'}\n          sections={sections}\n        />\n        <ReactMarkdown source={data.proposalBySlug.summary} />\n        <ReactMarkdown source={data.proposalBySlug.legal} />\n      </ContentContainer>\n    </MainLayout>\n  );\n}\n\nProposalPage.getInitialProps = ({ query }) => ({ query });\n\nexport default ProposalPage;\n"]},"metadata":{},"sourceType":"module"}