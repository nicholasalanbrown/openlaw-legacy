{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/nicholasbrown/Source/openlaw/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport App from \"next/app\";\nimport Router from \"next/router\";\nimport fetch from \"isomorphic-unfetch\";\nimport { ApolloClient, ApolloProvider, HttpLink, InMemoryCache } from \"@apollo/client\";\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: process.env.API_URI,\n    fetch\n  })\n});\nexport default class Root extends App {\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(ApolloProvider, {\n      client: client,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/nicholasbrown/Source/openlaw/pages/_app.js"],"names":["App","Router","fetch","ApolloClient","ApolloProvider","HttpLink","InMemoryCache","client","cache","link","uri","process","env","API_URI","Root","render","Component","pageProps","props"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,QAHF,EAIEC,aAJF,QAKO,gBALP;AAOA,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC9BK,EAAAA,KAAK,EAAE,IAAIF,aAAJ,EADuB;AAE9BG,EAAAA,IAAI,EAAE,IAAIJ,QAAJ,CAAa;AACjBK,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,OADA;AAEjBX,IAAAA;AAFiB,GAAb;AAFwB,CAAjB,CAAf;AAQA,eAAe,MAAMY,IAAN,SAAmBd,GAAnB,CAAuB;AACpCe,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AAEA,WACE,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAEX,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeU,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD;;AATmC","sourcesContent":["import App from \"next/app\";\nimport Router from \"next/router\";\nimport fetch from \"isomorphic-unfetch\";\nimport {\n  ApolloClient,\n  ApolloProvider,\n  HttpLink,\n  InMemoryCache\n} from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: process.env.API_URI,\n    fetch\n  })\n});\n\nexport default class Root extends App {\n  render() {\n    const { Component, pageProps } = this.props;\n\n    return (\n      <ApolloProvider client={client}>\n        <Component {...pageProps} />\n      </ApolloProvider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}