{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/nicholasbrown/Source/openlaw/components/ProposalPage.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport MeactMarkdown from \"react-markdown\";\nimport { useRouter } from \"next/router\";\nimport { withAuth, withLoginRequired } from \"use-auth0-hooks\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport MainLayout from \"../layouts/MainLayout\";\nimport { ContentContainer, ProposalHeader } from \"./\";\nimport { PROPOSAL_BY_SLUG_QUERY } from \"../queries\";\nimport ReactMarkdown from \"react-markdown\";\nconst Sections = styled.div.withConfig({\n  displayName: \"ProposalPage__Sections\",\n  componentId: \"sc-1xdfroq-0\"\n})([\"display:flex;\"]);\n\nfunction ProposalPage({\n  auth,\n  query,\n  sections,\n  currentSection\n}) {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(PROPOSAL_BY_SLUG_QUERY, {\n    variables: {\n      slug: query.proposal,\n      branchName: query.branch\n    }\n  });\n\n  if (loading) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Error: \", _JSON$stringify(error));\n  }\n\n  const router = useRouter();\n\n  const handleBranchSelect = selectedBranch => {\n    if (selectedBranch !== query.branch) {\n      if (selectedBranch !== \"master\") {\n        router.push(`/p/${query.proposal}/branch/${selectedBranch}`);\n      } else {\n        router.push(`/p/${query.proposal}`);\n      }\n    }\n  };\n\n  return __jsx(MainLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(ContentContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(ProposalHeader, {\n    title: data.proposalBySlug.title,\n    description: data.proposalBySlug.description,\n    branches: data.proposalBySlug.branches,\n    onBranchSelect: handleBranchSelect,\n    currentBranch: query.branch || \"master\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(Sections, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, sections.map(section => __jsx(Link, {\n    href: section.href,\n    key: section.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, section.label)))), __jsx(ReactMarkdown, {\n    source: data.proposalBySlug.summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), __jsx(ReactMarkdown, {\n    source: data.proposalBySlug.legal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })));\n}\n\nProposalPage.getInitialProps = ({\n  query\n}) => {\n  return {\n    query\n  };\n};\n\nexport default ProposalPage;","map":{"version":3,"sources":["/Users/nicholasbrown/Source/openlaw/components/ProposalPage.js"],"names":["fetch","Link","styled","MeactMarkdown","useRouter","withAuth","withLoginRequired","useQuery","MainLayout","ContentContainer","ProposalHeader","PROPOSAL_BY_SLUG_QUERY","ReactMarkdown","Sections","div","ProposalPage","auth","query","sections","currentSection","loading","error","data","variables","slug","proposal","branchName","branch","router","handleBranchSelect","selectedBranch","push","proposalBySlug","title","description","branches","map","section","href","label","summary","legal","getInitialProps"],"mappings":"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","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport MeactMarkdown from \"react-markdown\";\nimport { useRouter } from \"next/router\";\nimport { withAuth, withLoginRequired } from \"use-auth0-hooks\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport MainLayout from \"../layouts/MainLayout\";\nimport { ContentContainer, ProposalHeader } from \"components\";\nimport { PROPOSAL_BY_SLUG_QUERY } from \"../queries\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst Sections = styled.div`\n  display: flex;\n`;\n\nfunction ProposalPage({ auth, query, sections, currentSection }) {\n  const { loading, error, data } = useQuery(PROPOSAL_BY_SLUG_QUERY, {\n    variables: { slug: query.proposal, branchName: query.branch }\n  });\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>Error: {JSON.stringify(error)}</p>;\n  }\n\n  const router = useRouter();\n\n  const handleBranchSelect = selectedBranch => {\n    if (selectedBranch !== query.branch) {\n      if (selectedBranch !== \"master\") {\n        router.push(`/p/${query.proposal}/branch/${selectedBranch}`);\n      } else {\n        router.push(`/p/${query.proposal}`);\n      }\n    }\n  };\n\n  return (\n    <MainLayout>\n      <ContentContainer>\n        <ProposalHeader\n          title={data.proposalBySlug.title}\n          description={data.proposalBySlug.description}\n          branches={data.proposalBySlug.branches}\n          onBranchSelect={handleBranchSelect}\n          currentBranch={query.branch || \"master\"}\n        />\n        <Sections>\n          {sections.map(section => (\n            <Link href={section.href} key={section.label}>\n              <a>{section.label}</a>\n            </Link>\n          ))}\n        </Sections>\n        <ReactMarkdown source={data.proposalBySlug.summary} />\n        <ReactMarkdown source={data.proposalBySlug.legal} />\n      </ContentContainer>\n    </MainLayout>\n  );\n}\n\nProposalPage.getInitialProps = ({ query }) => {\n  return { query };\n};\n\nexport default ProposalPage;\n"]},"metadata":{},"sourceType":"module"}